{"version":3,"sources":["components/Toc.jsx","components/Details.jsx","utils/localStorageHook.js","img/swlogo.com.png","App.js","reportWebVitals.js","index.js"],"names":["Toc","films","handleSelect","className","map","film","onClick","_id","properties","title","Details","displayedFilm","selectedFavorite","handleSelectFavorite","filmToRender","filter","length","opening_crawl","useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","App","setFilms","setSelectedFavorite","setDisplayedFilm","useEffect","axios","get","then","res","data","result","catch","err","src","logo","alt","id","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NAuBeA,MApBf,YAGI,IAFAC,EAED,EAFCA,MACAC,EACD,EADCA,aAEA,OACI,qBACIC,UAAU,WADd,SAGKF,EAAMG,KAAI,SAAAC,GAAI,OACX,qBACIF,UAAU,gBACVG,QAAS,kBAAMJ,EAAaG,EAAKE,MAFrC,SAISF,EAAKG,WAAWC,OADhBJ,EAAKE,WCmCfG,MAhDf,YAKI,IAJAT,EAID,EAJCA,MACAU,EAGD,EAHCA,cACAC,EAED,EAFCA,iBACAC,EACD,EADCA,qBAGMC,EAAeb,EAAMc,QAAO,SAAAV,GAAI,OAAIA,EAAKE,MAAQI,KAEvD,OACI,sBAAKR,UAAU,eAAf,UACI,qBAAKA,UAAU,uBAAf,SAEgC,IAAxBW,EAAaE,OACP,iDACA,KAIV,qBACIb,UAAU,uBADd,SAGKW,EAAaV,KAAI,SAAAC,GAAI,OAClB,sBACIF,UAAWS,IAAqBP,EAAKE,IAC/B,gCACA,uBAHV,UAMKK,IAAqBP,EAAKE,IAA1B,yBAEK,GAELK,IAAqBP,EAAKE,IACrB,qBAAKJ,UAAU,MAAMG,QAAS,kBAAMO,EAAqBR,EAAKE,MAA9D,iDAEA,GAEN,qBAAKJ,UAAU,6BAAf,SAA6CE,EAAKG,WAAWC,QAC7D,qBAAKN,UAAU,gCAAf,SAAgDE,EAAKG,WAAWS,kBAX3DZ,EAAKE,c,iBCKvBW,MAjCf,SAAyBC,EAAKC,GAG5B,MAAsCC,oBAAS,WAC7C,IAEE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GAEzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAGP,OADAC,QAAQC,IAAIF,GACLR,MATX,mBAAOW,EAAP,KAAoBC,EAApB,KA4BA,MAAO,CAACD,EAdS,SAACE,GAChB,IAEE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EAEnDD,EAAeE,GAEfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAChD,MAAON,GAEPC,QAAQC,IAAIF,OC9BH,MAA0B,uCCyD1BU,MA9Cf,WACE,MAA0BjB,mBAAS,IAAnC,mBAAOpB,EAAP,KAAcsC,EAAd,KACA,EAAgDrB,EAAgB,mBAAoB,IAApF,mBAAON,EAAP,KAAyB4B,EAAzB,KACA,EAA0CnB,mBAAST,GAAnD,mBAAOD,EAAP,KAAsB8B,EAAtB,KAkBA,OAfAC,qBAAU,WACRC,IAAMC,IAAI,qCACPC,MAAK,SAAAC,GACJP,EAASO,EAAIC,KAAKC,WACjBC,OAAM,SAAAC,GAAG,OAAIrB,QAAQD,MAAMsB,EAAK,oDACpC,IAWD,sBAAK/C,UAAU,QAAf,UACE,qBAAKA,UAAU,OAAf,SACE,qBACEgD,IAAKC,EAAMC,IAAI,qBAInB,sBAAKlD,UAAU,WAAf,UACE,cAAC,EAAD,CACEF,MAAOA,EACPC,aAnBa,SAACoD,GACpBb,EAAiBa,MAqBb,cAAC,EAAD,CACErD,MAAOA,EACPU,cAAeA,EACfC,iBAAkBA,EAClBC,qBAtBqB,SAACyC,GAC5Bd,EAAoBc,aCjBTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBrB,UACxC,6BAAqBU,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCDdM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1f418385.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Toc({\r\n    films,\r\n    handleSelect\r\n}) {\r\n    return (\r\n        <div\r\n            className=\"toc-comp\"\r\n        >\r\n            {films.map(film => (\r\n                <div\r\n                    className=\"toc-comp_card\"\r\n                    onClick={() => handleSelect(film._id)}\r\n                    key={film._id}>\r\n                        {film.properties.title}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toc\r\n","import React from 'react'\r\n\r\nfunction Details({\r\n    films,\r\n    displayedFilm,\r\n    selectedFavorite,\r\n    handleSelectFavorite\r\n}) {\r\n\r\n    const filmToRender = films.filter(film => film._id === displayedFilm); // filtering the movies by id\r\n\r\n    return (\r\n        <div className=\"details-comp\">\r\n            <div className=\"details-comp_heading\">\r\n                {\r\n                    filmToRender.length === 0\r\n                        ? \"To learn more, please click on the movie title\"\r\n                        : \"\"\r\n                }\r\n            </div>\r\n            {\r\n                <div\r\n                    className=\"details-comp_content\"\r\n                >\r\n                    {filmToRender.map(film => (\r\n                        <div\r\n                            className={selectedFavorite === film._id\r\n                                ? \"details-comp_content_favorite\" \r\n                                : \"details-comp_content\"\r\n                            }\r\n                            key={film._id}>\r\n                            {selectedFavorite === film._id\r\n                                ? `This is my favorite!!!`\r\n                                : \"\"\r\n                            }\r\n                            {selectedFavorite !== film._id\r\n                                ? <div className=\"btn\" onClick={() => handleSelectFavorite(film._id)}>\r\n                                    Select this movie as your favorite </div>\r\n                                : \"\"\r\n                            }\r\n                            <div className=\"details-comp_content_title\">{film.properties.title}</div>\r\n                            <div className=\"details-comp_content_abstract\">{film.properties.opening_crawl}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Details\r\n","import { useState } from \"react\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}\r\nexport default useLocalStorage;","export default __webpack_public_path__ + \"static/media/swlogo.com.f2b79c53.png\";","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Toc from './components/Toc';\nimport Details from './components/Details';\nimport axios from 'axios';\nimport useLocalStorage from './utils/localStorageHook';\nimport logo from './img/swlogo.com.png'\n\n\n\n\nfunction App() {\n  const [films, setFilms] = useState([]);//films data\n  const [selectedFavorite, setSelectedFavorite] = useLocalStorage(\"selectedFavorite\", []);// Local Storage hook\n  const [displayedFilm, setDisplayedFilm] = useState(selectedFavorite);//state of the selected films\n\n\n  useEffect(() => {\n    axios.get('https://www.swapi.tech/api/films/')\n      .then(res => {\n        setFilms(res.data.result)\n      }).catch(err => console.error(err, \"Error, couldn't fetch the data from the API\"))\n  }, []); // fetching the data from the SWAPI\n\n  const handleSelect = (id) => {\n    setDisplayedFilm(id)\n  }\n\n  const handleSelectFavorite = (id) => {\n    setSelectedFavorite(id)\n  }\n\n  return (\n    <div className=\"stars\">\n      <div className=\"logo\">\n        <img\n          src={logo} alt=\"star wars logo\"\n        />\n      </div>\n\n      <div className=\"app-comp\">\n        <Toc\n          films={films}\n          handleSelect={handleSelect}\n        />\n\n        <Details\n          films={films}\n          displayedFilm={displayedFilm}\n          selectedFavorite={selectedFavorite}\n          handleSelectFavorite={handleSelectFavorite}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}